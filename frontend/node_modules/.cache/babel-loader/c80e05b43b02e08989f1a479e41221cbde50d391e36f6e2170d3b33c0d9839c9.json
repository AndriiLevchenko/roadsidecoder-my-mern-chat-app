{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\roadsidecoder-my-mern-chat-app\\\\frontend\\\\src\\\\Pages\\\\ChatPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatPage = () => {\n  _s();\n  const [chats, setChats] = useState([]);\n  const fetchChats = async () => {\n    console.log(\"fetchChats = \");\n    //const data = await axios.get(\"/api/chat\");\n    const data = \"data\";\n    console.log(\"data = \", data);\n    setChats({\n      \"data\": \"data\"\n    });\n    if (data) {\n      // setChats(data.data);\n      setChats({\n        name: \"data\"\n      });\n    }\n    // const res = await fetch(\"/api/chat\");\n    // console.log(\"res = \", res);\n    // // const data = await res.json();\n    // const data = res.data;\n    // console.log(\"data = \", data);\n    // if (data.error) {\n    //     throw new Error(data.error);\n    // }\n    // setChats(data.data);\n  };\n  useEffect(() => {\n    fetchChats();\n  }, []);\n\n  // useEffect(() => {\n  //     const getConversations = async () => {\n  //\n  //         try {\n  //             const res = await fetch(\"/api/chat\");\n  //             console.log(\"res = \", res);\n  //             const data = await res.json();\n  //             console.log(\"data = \", data);\n  //             if (data.error) {\n  //                 throw new Error(data.error);\n  //             }\n  //         } catch (error) {\n  //             console.log(error);\n  //         }\n  //     };\n  //\n  //     getConversations();\n  // }, []);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"ChatPage\", !!chats ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: chats.map((item, i) => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: item.chatName\n      }, item._id + i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 52\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 24\n    }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u0427\\u0430\\u0442\\u0456\\u0432 \\u043D\\u0435\\u043C\\u0430\\u0454\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 104\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n_s(ChatPage, \"vytB8QcpLWFeZXbb4G/4rqAt8MY=\");\n_c = ChatPage;\nexport default ChatPage;\nvar _c;\n$RefreshReg$(_c, \"ChatPage\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","ChatPage","_s","chats","setChats","fetchChats","console","log","data","name","children","map","item","i","chatName","_id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/React/roadsidecoder-my-mern-chat-app/frontend/src/Pages/ChatPage.jsx"],"sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport axios from 'axios';\r\n\r\nconst ChatPage = () => {\r\n    const [chats, setChats] = useState([]);\r\n    const fetchChats =async()=>{\r\n        console.log(\"fetchChats = \");\r\n        //const data = await axios.get(\"/api/chat\");\r\n        const data = \"data\";\r\n        console.log(\"data = \", data);\r\n        setChats({\"data\": \"data\"});\r\n        if(data) {\r\n            // setChats(data.data);\r\n            setChats({name : \"data\"});\r\n        }\r\n        // const res = await fetch(\"/api/chat\");\r\n        // console.log(\"res = \", res);\r\n        // // const data = await res.json();\r\n        // const data = res.data;\r\n        // console.log(\"data = \", data);\r\n        // if (data.error) {\r\n        //     throw new Error(data.error);\r\n        // }\r\n        // setChats(data.data);\r\n    }\r\n    useEffect(()=>{\r\n        fetchChats();\r\n    }, []);\r\n\r\n    // useEffect(() => {\r\n    //     const getConversations = async () => {\r\n    //\r\n    //         try {\r\n    //             const res = await fetch(\"/api/chat\");\r\n    //             console.log(\"res = \", res);\r\n    //             const data = await res.json();\r\n    //             console.log(\"data = \", data);\r\n    //             if (data.error) {\r\n    //                 throw new Error(data.error);\r\n    //             }\r\n    //         } catch (error) {\r\n    //             console.log(error);\r\n    //         }\r\n    //     };\r\n    //\r\n    //     getConversations();\r\n    // }, []);\r\n\r\n\r\n    return (\r\n        <div>ChatPage\r\n            {!!chats ? <div>{ chats.map((item, i)=><p key={item._id + i}>{item.chatName}</p>)}</div> : <h1>Чатів немає</h1>}\r\n        </div>\r\n    )\r\n}\r\nexport default ChatPage\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAChD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAMQ,UAAU,GAAE,MAAAA,CAAA,KAAS;IACvBC,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;IAC5B;IACA,MAAMC,IAAI,GAAG,MAAM;IACnBF,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEC,IAAI,CAAC;IAC5BJ,QAAQ,CAAC;MAAC,MAAM,EAAE;IAAM,CAAC,CAAC;IAC1B,IAAGI,IAAI,EAAE;MACL;MACAJ,QAAQ,CAAC;QAACK,IAAI,EAAG;MAAM,CAAC,CAAC;IAC7B;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EACJ,CAAC;EACDb,SAAS,CAAC,MAAI;IACVS,UAAU,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAGA,oBACIL,OAAA;IAAAU,QAAA,GAAK,UACD,EAAC,CAAC,CAACP,KAAK,gBAAGH,OAAA;MAAAU,QAAA,EAAOP,KAAK,CAACQ,GAAG,CAAC,CAACC,IAAI,EAAEC,CAAC,kBAAGb,OAAA;QAAAU,QAAA,EAAuBE,IAAI,CAACE;MAAQ,GAA5BF,IAAI,CAACG,GAAG,GAAGF,CAAC;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAoB,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,gBAAGnB,OAAA;MAAAU,QAAA,EAAI;IAAW;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9G,CAAC;AAEd,CAAC;AAAAjB,EAAA,CAnDKD,QAAQ;AAAAmB,EAAA,GAARnB,QAAQ;AAoDd,eAAeA,QAAQ;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}