{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\roadsidecoder-my-mern-chat-app\\\\frontend\\\\src\\\\components\\\\miscellaneous\\\\GroupChatModal.js\",\n  _s = $RefreshSig$();\nimport { Modal, ModalOverlay, ModalContent, ModalHeader, ModalFooter, ModalBody, ModalCloseButton, Button, useDisclosure, FormControl, Input, useToast, Box } from \"@chakra-ui/react\";\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport { ChatState } from \"../../Context/ChatProvider\";\nimport UserBadgeItem from \"../userAvatar/UserBadgeItem\";\nimport UserListItem from \"../userAvatar/UserListItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GroupChatModal = ({\n  children\n}) => {\n  _s();\n  const {\n    isOpen,\n    onOpen,\n    onClose\n  } = useDisclosure();\n  const [groupChatName, setGroupChatName] = useState();\n  const [selectedUsers, setSelectedUsers] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [searchResult, setSearchResult] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const toast = useToast();\n  const {\n    user,\n    chats,\n    setChats\n  } = ChatState();\n  const handleGroup = userToAdd => {\n    if (selectedUsers.includes(userToAdd)) {\n      toast({\n        title: \"User already added\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"top\"\n      });\n      return;\n    }\n    setSelectedUsers([...selectedUsers, userToAdd]);\n  };\n  const handleSearch = async query => {\n    setSearch(query);\n    if (!query) {\n      return;\n    }\n    try {\n      setLoading(true);\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`\n        }\n      };\n      const {\n        data\n      } = await axios.get(`/api/user?search=${search}`, config);\n      console.log(data);\n      setLoading(false);\n      setSearchResult(data);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: \"Failed to Load the Search Results\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom-left\"\n      });\n    }\n  };\n  const handleDelete = delUser => {\n    setSelectedUsers(selectedUsers.filter(sel => sel._id !== delUser._id));\n  };\n  const handleSubmit = async () => {\n    if (!groupChatName || !selectedUsers) {\n      toast({\n        title: \"Please fill all the feilds\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"top\"\n      });\n      return;\n    }\n    try {\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`\n        }\n      };\n      const {\n        data\n      } = await axios.post(`/api/chat/group`, {\n        name: groupChatName,\n        users: JSON.stringify(selectedUsers.map(u => u._id))\n      }, config);\n      setChats([data, ...chats]);\n      onClose();\n      toast({\n        title: \"New Group Chat Created!\",\n        status: \"success\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\"\n      });\n    } catch (error) {\n      toast({\n        title: \"Failed to Create the Chat!\",\n        description: error.response.data,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\"\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 9\n  }, this);\n};\n_s(GroupChatModal, \"PHSzC1yTrtxvyG3eWGbgwqRvKTk=\", false, function () {\n  return [useDisclosure, useToast];\n});\n_c = GroupChatModal;\nexport default GroupChatModal;\nvar _c;\n$RefreshReg$(_c, \"GroupChatModal\");","map":{"version":3,"names":["Modal","ModalOverlay","ModalContent","ModalHeader","ModalFooter","ModalBody","ModalCloseButton","Button","useDisclosure","FormControl","Input","useToast","Box","axios","useState","ChatState","UserBadgeItem","UserListItem","jsxDEV","_jsxDEV","GroupChatModal","children","_s","isOpen","onOpen","onClose","groupChatName","setGroupChatName","selectedUsers","setSelectedUsers","search","setSearch","searchResult","setSearchResult","loading","setLoading","toast","user","chats","setChats","handleGroup","userToAdd","includes","title","status","duration","isClosable","position","handleSearch","query","config","headers","Authorization","token","data","get","console","log","error","description","handleDelete","delUser","filter","sel","_id","handleSubmit","post","name","users","JSON","stringify","map","u","response","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/React/roadsidecoder-my-mern-chat-app/frontend/src/components/miscellaneous/GroupChatModal.js"],"sourcesContent":["import { Modal, ModalOverlay, ModalContent, ModalHeader, ModalFooter, ModalBody, ModalCloseButton, Button,\r\n        useDisclosure, FormControl, Input, useToast, Box } from \"@chakra-ui/react\";\r\nimport axios from \"axios\";\r\nimport { useState } from \"react\";\r\nimport { ChatState } from \"../../Context/ChatProvider\";\r\nimport UserBadgeItem from \"../userAvatar/UserBadgeItem\";\r\nimport UserListItem from \"../userAvatar/UserListItem\";\r\n\r\n\r\nconst GroupChatModal = ({children}) => {\r\n    const { isOpen, onOpen, onClose } = useDisclosure();\r\n    const [groupChatName, setGroupChatName] = useState();\r\n    const [selectedUsers, setSelectedUsers] = useState([]);\r\n    const [search, setSearch] = useState(\"\");\r\n    const [searchResult, setSearchResult] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const toast = useToast();\r\n\r\n    const { user, chats, setChats } = ChatState();\r\n\r\n    const handleGroup = (userToAdd) => {\r\n        if (selectedUsers.includes(userToAdd)) {\r\n            toast({\r\n                title: \"User already added\",\r\n                status: \"warning\",\r\n                duration: 5000,\r\n                isClosable: true,\r\n                position: \"top\",\r\n            });\r\n            return;\r\n        }\r\n\r\n        setSelectedUsers([...selectedUsers, userToAdd]);\r\n    };\r\n    const handleSearch = async (query) => {\r\n        setSearch(query);\r\n        if (!query) {\r\n            return;\r\n        }\r\n\r\n        try {\r\n            setLoading(true);\r\n            const config = {\r\n                headers: {\r\n                    Authorization: `Bearer ${user.token}`,\r\n                },\r\n            };\r\n            const { data } = await axios.get(`/api/user?search=${search}`, config);\r\n            console.log(data);\r\n            setLoading(false);\r\n            setSearchResult(data);\r\n        } catch (error) {\r\n            toast({\r\n                title: \"Error Occured!\",\r\n                description: \"Failed to Load the Search Results\",\r\n                status: \"error\",\r\n                duration: 5000,\r\n                isClosable: true,\r\n                position: \"bottom-left\",\r\n            });\r\n        }\r\n    };\r\n\r\n    const handleDelete = (delUser) => {\r\n        setSelectedUsers(selectedUsers.filter((sel) => sel._id !== delUser._id));\r\n    };\r\n\r\n    const handleSubmit = async () => {\r\n        if (!groupChatName || !selectedUsers) {\r\n            toast({\r\n                title: \"Please fill all the feilds\",\r\n                status: \"warning\",\r\n                duration: 5000,\r\n                isClosable: true,\r\n                position: \"top\",\r\n            });\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    Authorization: `Bearer ${user.token}`,\r\n                },\r\n            };\r\n            const { data } = await axios.post(\r\n                `/api/chat/group`,\r\n                {\r\n                    name: groupChatName,\r\n                    users: JSON.stringify(selectedUsers.map((u) => u._id)),\r\n                },\r\n                config\r\n            );\r\n            setChats([data, ...chats]);\r\n            onClose();\r\n            toast({\r\n                title: \"New Group Chat Created!\",\r\n                status: \"success\",\r\n                duration: 5000,\r\n                isClosable: true,\r\n                position: \"bottom\",\r\n            });\r\n        } catch (error) {\r\n            toast({\r\n                title: \"Failed to Create the Chat!\",\r\n                description: error.response.data,\r\n                status: \"error\",\r\n                duration: 5000,\r\n                isClosable: true,\r\n                position: \"bottom\",\r\n            });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>{children}</div>\r\n    )\r\n}\r\nexport default GroupChatModal\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}